def bruteforce_max_subarray(A):
    '''
    This brute force implementation of the max subarray problem which finds a contiguous subarray of A with the     greatest sum by checking all possible subarrays sums
    
    Parameters
    -----------
    A: list
        input array
   
    Returns
    ----------
    max_left, max_right
        Indices for the left and right indices, i.e., starting and ending indices of the maximum subarray
    
    subarray_max
        The sum of the maximum subarray
        
    '''
    
    # Set initial sentinel value as lower than lowest in the array
    subarray_max = min(A)-1
    
    #Initialize indices
    max_left = 0
    max_right = 0
    
    #Nested for loop to iterate through all subarrays
    for i in range(0,len(A)):
        for j in range(i+1,len(A)+1):
            
            #Select current subarray and find interim max 
            interim_max = sum(A[i:j])
            
            #Continuously update maximum subarray when appropriate
            if interim_max > subarray_max:
                subarray_max = interim_max
                
                
                max_left = i
                max_right = j-1
                
    return(max_left,max_right,subarray_max)
