def bruteforce_min_subarray(A):
    '''
    This brute force implementation of the min subarray problem which finds a contiguous subarray of A with the smallest sum by checking all possible subarrays sums
    
    Parameters
    -----------
    A: list
        input array
   
    Returns
    ----------
    min_left, min_right
        Indices for the left and right indices, i.e., starting and ending indices of the minimum subarray
    
    subarray_min
        The sum of the min subarray
        
    '''
    
    # Set initial sentinel value as higher than highest in the array
    subarray_min = max(A)+1
    
    #Initialize indices
    min_left = 0
    min_right = 0
    
    #Nested for loop to iterate through all subarrays
    for i in range(0,len(A)):
        for j in range(i+1,len(A)+1):
            
            #Select current subarray and find interim max 
            interim_min = sum(A[i:j])
            
            #Continuously update maximum subarray when appropriate
            if interim_min < subarray_min:
                subarray_min = interim_min
                
                
                max_left = i
                max_right = j-1
                
    return(min_left,min_right,subarray_min)

